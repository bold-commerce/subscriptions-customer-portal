deploy preview:
  stage: deploy
  image: git.kodix.ru/kodix/build/helm:3
  only:
    - branches
  except:
    refs:
      - tags
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://$CI_COMMIT_REF_SLUG-$CI_PROJECT_PATH_SLUG.$KUBE_NAMESPACE.outside.dev
    on_stop: Stop
    auto_stop_in: 3 day
  script:
    - kubectl delete secret
      --ignore-not-found
      -n $KUBE_NAMESPACE $REGISTRY_SECRET
    - kubectl create secret -n $KUBE_NAMESPACE
      docker-registry $REGISTRY_SECRET
      --docker-server="$CI_REGISTRY"
      --docker-username=$REGISTRY_USER
      --docker-password=$REGISTRY_TOKEN
      -o yaml | kubectl replace -n $KUBE_NAMESPACE --force -f -
    - helm upgrade
      --install
      --set registry.image="$IMAGE_TAG"
      --set registry.secret=$REGISTRY_SECRET
      --set release_mode=development
      --set appBranch=$CI_COMMIT_REF_SLUG
      --set appPath=$CI_PROJECT_PATH_SLUG
      --set commitHash=$CI_COMMIT_SHA
      --set ingress.domain=$(echo $CI_ENVIRONMENT_URL | cut -d / -f3)
      -n $KUBE_NAMESPACE
      --atomic
      $RELEASE_NAME
      ./.helm
  needs:
    - outside front preview

deploy production:
  stage: deploy
  image: git.kodix.ru/kodix/build/helm:3
  only:
    - tags
  except:
    refs:
      - branches
  environment:
    name: production
    url: http://your.domain.here
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    RELEASE_NAME: $CI_PROJECT_PATH_SLUG-production
  script:
    - kubectl delete secret
      --ignore-not-found
      -n $KUBE_NAMESPACE $REGISTRY_SECRET
    - kubectl create secret -n $KUBE_NAMESPACE
      docker-registry $REGISTRY_SECRET
      --docker-server="$CI_REGISTRY"
      --docker-username=$REGISTRY_USER
      --docker-password=$REGISTRY_TOKEN
      -o yaml | kubectl replace -n $KUBE_NAMESPACE --force -f -
    - helm upgrade
      --install
      --set registry.image="$IMAGE_TAG"
      --set registry.secret=$REGISTRY_SECRET
      --set release_mode=production
      --set appBranch=production
      --set appPath=$CI_PROJECT_PATH_SLUG
      --set commitHash=$CI_COMMIT_SHA
      --set ingress.domain=$(echo $CI_ENVIRONMENT_URL | cut -d / -f3)
      -n $KUBE_NAMESPACE
      --atomic
      $RELEASE_NAME
      ./.helm
  needs:
    - outside front release

Stop:
  stage: deploy
  image: git.kodix.ru/kodix/build/helm:3
  only:
    refs:
      - branches
  except:
    refs:
      - tags
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  variables:
    GIT_STRATEGY: none
  script:
    - helm un -n $KUBE_NAMESPACE $RELEASE_NAME
  when: manual
